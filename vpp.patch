diff --git a/Makefile b/Makefile
index 09df4a08..9005d9a1 100644
--- a/Makefile
+++ b/Makefile
@@ -61,7 +61,7 @@ endif
 DEB_DEPENDS  = curl build-essential autoconf automake bison ccache
 DEB_DEPENDS += debhelper dkms git libtool libapr1-dev dh-systemd
 DEB_DEPENDS += libconfuse-dev git-review exuberant-ctags cscope pkg-config
-DEB_DEPENDS += lcov chrpath autoconf indent clang-format libnuma-dev
+DEB_DEPENDS += lcov chrpath autoconf indent libnuma-dev
 DEB_DEPENDS += python-all python-dev python-virtualenv python-pip libffi6 check
 DEB_DEPENDS += libboost-all-dev
 ifeq ($(OS_VERSION_ID),14.04)
@@ -74,7 +74,7 @@ else ifeq ($(OS_ID)-$(OS_VERSION_ID),debian-8)
 else ifeq ($(OS_ID)-$(OS_VERSION_ID),debian-9)
 	DEB_DEPENDS += default-jdk-headless
 	DEB_DEPENDS += libssl1.0-dev
-else 
+else
 	DEB_DEPENDS += default-jdk-headless
 	DEB_DEPENDS += libssl-dev
 endif
@@ -110,13 +110,13 @@ RPM_DEPENDS += chrpath libffi-devel rpm-build
 
 SUSE_NAME= $(shell grep '^NAME=' /etc/os-release | cut -f2- -d= | sed -e 's/\"//g' | cut -d' ' -f2)
 RPM_SUSE_BUILDTOOLS_DEPS = autoconf automake bison ccache check-devel chrpath clang indent libtool make
-RPM_SUSE_DEVEL_DEPS = glibc-devel-static java-1_8_0-openjdk-devel libnuma-devel libopenssl-devel openssl-devel 
-RPM_SUSE_PYTHON_DEPS = python-devel python3-devel python-pip python3-pip python-rpm-macros python3-rpm-macros 
+RPM_SUSE_DEVEL_DEPS = glibc-devel-static java-1_8_0-openjdk-devel libnuma-devel libopenssl-devel openssl-devel
+RPM_SUSE_PYTHON_DEPS = python-devel python3-devel python-pip python3-pip python-rpm-macros python3-rpm-macros
 RPM_SUSE_PLATFORM_DEPS = distribution-release shadow rpm-build
 
 ifeq ($(OS_ID),opensuse)
 ifneq ($(SUSE_NAME),Tumbleweed)
-	RPM_SUSE_DEVEL_DEPS += boost_1_61-devel gcc6 
+	RPM_SUSE_DEVEL_DEPS += boost_1_61-devel gcc6
 	RPM_SUSE_PYTHON_DEPS += python-virtualenv
 else
 	RPM_SUSE_DEVEL_DEPS += boost_1_65-devel gcc
@@ -440,7 +440,7 @@ run-release:
 debug:
 	$(call run, $(BR)/install-$(PLATFORM)_debug-native,$(GDB) $(GDB_ARGS) --args)
 
-build-coverity: 
+build-coverity:
 	$(call make,$(PLATFORM)_coverity,install-packages)
 
 debug-release:
@@ -526,5 +526,3 @@ endif
 ifeq ($(OS_ID)-$(OS_VERSION_ID),ubuntu-16.04)
 	@make COMPRESS_FAILED_TEST_LOGS=yes RETRIES=3 test
 endif
-
-
diff --git a/src/vcl/vcom_socket.c b/src/vcl/vcom_socket.c
index 6fcc4e58..e3a052f5 100644
--- a/src/vcl/vcom_socket.c
+++ b/src/vcl/vcom_socket.c
@@ -1915,7 +1915,7 @@ vcom_socket_getsockopt (int __fd, int __level, int __optname,
 	case SO_BINDTODEVICE:
 	case SO_GET_FILTER:
 	case SO_LOCK_FILTER:
-	case SO_BPF_EXTENSIONS:
+	//case SO_BPF_EXTENSIONS:
 	case SO_SELECT_ERR_QUEUE:
 #ifdef CONFIG_NET_RX_BUSY_POLL
 	case SO_BUSY_POLL:
@@ -2138,7 +2138,7 @@ vcom_socket_setsockopt (int __fd, int __level, int __optname,
 	  /* case SO_BINDTODEVICE: */
 	case SO_GET_FILTER:
 	case SO_LOCK_FILTER:
-	case SO_BPF_EXTENSIONS:
+	//case SO_BPF_EXTENSIONS:
 	case SO_SELECT_ERR_QUEUE:
 #ifdef CONFIG_NET_RX_BUSY_POLL
 	case SO_BUSY_POLL:
diff --git a/src/vppinfra/linux/mem.c b/src/vppinfra/linux/mem.c
index 2d8f593d..f277fb08 100644
--- a/src/vppinfra/linux/mem.c
+++ b/src/vppinfra/linux/mem.c
@@ -22,7 +22,16 @@
 #include <sys/mman.h>
 #include <fcntl.h>
 #include <linux/mempolicy.h>
-#include <linux/memfd.h>
+//#include <linux/memfd.h>
+#ifndef _UAPI_LINUX_MEMFD_H
+#define _UAPI_LINUX_MEMFD_H
+
+/* flags for memfd_create(2) (unsigned int) */
+#define MFD_CLOEXEC 0x0001U
+#define MFD_ALLOW_SEALING 0x0002U
+#endif /* _UAPI_LINUX_MEMFD_H */
+#define __NR_memfd_create 319
+#define SYS_memfd_create 319
 
 #include <vppinfra/clib.h>
 #include <vppinfra/mem.h>
diff --git a/src/vppinfra/linux/syscall.h b/src/vppinfra/linux/syscall.h
index f8ec5919..efd1ed94 100644
--- a/src/vppinfra/linux/syscall.h
+++ b/src/vppinfra/linux/syscall.h
@@ -16,6 +16,8 @@
 #ifndef included_linux_syscall_h
 #define included_linux_syscall_h
 
+#define __NR_memfd_create 319
+
 #include <unistd.h>
 #include <sys/syscall.h>
 
diff --git a/src/vppinfra/pool.c b/src/vppinfra/pool.c
index ed83b41a..d2870dd0 100644
--- a/src/vppinfra/pool.c
+++ b/src/vppinfra/pool.c
@@ -107,7 +107,7 @@ _pool_init_fixed (void **pool_ptr, u32 elt_size, u32 max_elts)
 
   /* Set the entire free bitmap */
   clib_bitmap_alloc (fh->free_bitmap, max_elts);
-  memset (fh->free_bitmap, 0xff, vec_len (fh->free_bitmap) * sizeof (uword));
+  //memset (fh->free_bitmap, 0xff, vec_len (fh->free_bitmap) * sizeof (uword));
 
   /* Clear any extraneous set bits */
   set_bits = vec_len (fh->free_bitmap) * BITS (uword);
